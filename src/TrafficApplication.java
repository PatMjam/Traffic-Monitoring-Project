import java.util.ArrayList;
import javax.swing.*;
import javax.swing.text.JTextComponent;
import javax.swing.JButton;
import javax.swing.table.AbstractTableModel;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author student
 */
public class TrafficApplication extends javax.swing.JFrame {
    
    ArrayList<Object[]> dataValues;
    //JTable table ;
    MyModel myTrafficModel;
   
    
    /**
     * Creates new form TrafficApplication
     */
    public TrafficApplication() {
    
//                 // Create column names
//        String columnNames[] =
//        {
//            "Time", "Location", "AvVehicle#", "AvVelocity"
//        };
//        ArrayList<Object[]> dataValues = new ArrayList();
//        dataValues.add(new Object[]
//        {
//            "6:00am", "1", "9", "70"
//        });
//        dataValues.add(new Object[]
//        {
//            "6:00am", "2", "8", "80"
//        });
//        dataValues.add(new Object[]
//        {
//            "7:00am", "2", "10", "60"
//        });
//        dataValues.add(new Object[]
//        {
//            "8:00am", "2", "11", "50"
//        });
//        dataValues.add(new Object[]
//        {
//            "9:00am", "2", "15", "60"
//        });
//  myTrafficModel = new MyModel(dataValues, columnNames);
  
        TrafficMonitoringData();
  
        initComponents();
        

        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jScrollPane2 = new javax.swing.JScrollPane();
        txtLinkedList = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtBinaryTree = new javax.swing.JTextArea();
        lblBinaryTree = new javax.swing.JLabel();
        lblLinkedList = new javax.swing.JLabel();
        btnDisplay = new javax.swing.JButton();
        btnPreOrderSave = new javax.swing.JButton();
        btnPreOrderDisplay = new javax.swing.JButton();
        btnInOrderDisplay = new javax.swing.JButton();
        btnInOrderSave = new javax.swing.JButton();
        btnPostOrderDisplay = new javax.swing.JButton();
        btnPostOrderSave = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        btnExit = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTrafficMonitoringData = new javax.swing.JTable();
        btnLocation = new javax.swing.JButton();
        btnVehicle = new javax.swing.JButton();
        btnVelocity = new javax.swing.JButton();
        lblSort = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtLinkedList.setColumns(20);
        txtLinkedList.setRows(5);
        jScrollPane2.setViewportView(txtLinkedList);

        txtBinaryTree.setColumns(20);
        txtBinaryTree.setRows(5);
        jScrollPane3.setViewportView(txtBinaryTree);

        lblBinaryTree.setText("Binary Tree:");

        lblLinkedList.setText("Linked List:");

        btnDisplay.setText("Display");

        btnPreOrderSave.setText("Save");

        btnPreOrderDisplay.setText("Display");

        btnInOrderDisplay.setText("Dsiplay");

        btnInOrderSave.setText("Save");

        btnPostOrderDisplay.setText("Display");

        btnPostOrderSave.setText("Save");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("In-Order");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Post-Order");

        jLabel5.setText("Pre-Order");

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane4.setViewportView(jTextArea3);

        btnExit.setText("Exit");

        jLabel8.setBackground(new java.awt.Color(102, 255, 255));
        jLabel8.setText("New data received from:");

        jLabel9.setText("Location 1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8))
                .addContainerGap(126, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addGap(10, 10, 10)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));

        tblTrafficMonitoringData.setModel(myTrafficModel);
        jScrollPane1.setViewportView(tblTrafficMonitoringData);

        btnLocation.setText("Location");
        btnLocation.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnLocationActionPerformed(evt);
            }
        });

        btnVehicle.setText("Vehicle");

        btnVelocity.setText("Velocity");

        lblSort.setText("Sort:");

        jLabel7.setText("Traffic Monitoring Data");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(lblSort)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnLocation)
                        .addGap(18, 18, 18)
                        .addComponent(btnVehicle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnVelocity))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(jLabel7)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLocation)
                    .addComponent(btnVehicle)
                    .addComponent(btnVelocity)
                    .addComponent(lblSort))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnPreOrderDisplay)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnPreOrderSave))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(jLabel5)))
                        .addGap(121, 121, 121)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnInOrderDisplay)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnInOrderSave))
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnPostOrderDisplay)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnPostOrderSave)
                                .addGap(21, 21, 21))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(59, 59, 59))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblBinaryTree)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnDisplay))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblLinkedList)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addComponent(jScrollPane2)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblLinkedList)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBinaryTree)
                    .addComponent(btnDisplay))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPreOrderDisplay)
                    .addComponent(btnPreOrderSave)
                    .addComponent(btnInOrderDisplay)
                    .addComponent(btnInOrderSave)
                    .addComponent(btnPostOrderDisplay)
                    .addComponent(btnPostOrderSave))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLocationActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnLocationActionPerformed
    {//GEN-HEADEREND:event_btnLocationActionPerformed
        // TODO add your handling code here:
        bubbleSort(dataValues);
        myTrafficModel.fireTableDataChanged();
    }//GEN-LAST:event_btnLocationActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TrafficApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TrafficApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TrafficApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TrafficApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TrafficApplication().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDisplay;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnInOrderDisplay;
    private javax.swing.JButton btnInOrderSave;
    private javax.swing.JButton btnLocation;
    private javax.swing.JButton btnPostOrderDisplay;
    private javax.swing.JButton btnPostOrderSave;
    private javax.swing.JButton btnPreOrderDisplay;
    private javax.swing.JButton btnPreOrderSave;
    private javax.swing.JButton btnVehicle;
    private javax.swing.JButton btnVelocity;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JLabel lblBinaryTree;
    private javax.swing.JLabel lblLinkedList;
    private javax.swing.JLabel lblSort;
    private javax.swing.JTable tblTrafficMonitoringData;
    private javax.swing.JTextArea txtBinaryTree;
    private javax.swing.JTextArea txtLinkedList;
    // End of variables declaration//GEN-END:variables






    public void TrafficMonitoringData()
    {

        // Create column names
        String columnNames[] =
        {
            "Time", "Location", "AvVehicle#", "AvVelocity"
        };
        dataValues = new ArrayList();
        dataValues.add(new Object[]
        {
            "6:00am", "7", "9", "70"
        });
        dataValues.add(new Object[]
        {
            "6:00am", "2", "8", "80"
        });
        dataValues.add(new Object[]
        {
            "7:00am", "5", "10", "60"
        });
        dataValues.add(new Object[]
        {
            "8:00am", "1", "11", "50"
        });
        dataValues.add(new Object[]
        {
            "9:00am", "4", "15", "60"
        });
        myTrafficModel = new MyModel(dataValues, columnNames);
    }

    
    //---------------------------------------------------------------------------------------------------
    // Source: http://www.dreamincode.net/forums/topic/231112-from-basic-jtable-to-a-jtable-with-a-tablemodel/
    // class that extends the AbstractTableModel
    //---------------------------------------------------------------------------------------------------

    class MyModel extends AbstractTableModel
    {
        ArrayList<Object[]> al;

        // the headers
        String[] header;

        // constructor 
        MyModel(ArrayList<Object[]> obj, String[] header)
        {
            // save the header
            this.header = header;
            // and the data
            al = obj;
        }

        // method that needs to be overload. The row count is the size of the ArrayList

        public int getRowCount()
        {
            return al.size();
        }

        // method that needs to be overload. The column count is the size of our header
        public int getColumnCount()
        {
            return header.length;
        }

        // method that needs to be overload. The object is in the arrayList at rowIndex
        public Object getValueAt(int rowIndex, int columnIndex)
        {
            return al.get(rowIndex)[columnIndex];
        }

        // a method to return the column name 
        public String getColumnName(int index)
        {
            return header[index];
        }

        // a method to add a new line to the table
//        void add(String Time, String Location, String AvVehicle, String AvVelocity)
//        {
//            // make it an array[2] as this is the way it is stored in the ArrayList
//            // (not best design but we want simplicity)
//            String[] str = new String[3];
//            str[0] = Time;
//            str[1] = Location;
//            str[2] = AvVehicle;
//            str[3] = AvVelocity;
//            al.add(str);
//            // inform the GUI that I have change
//            fireTableDataChanged();
//        }
       
        
    }

    //--------------------------------------------------
    //Sorts
    //--------------------------------------------------
    
    public static void bubbleSort(ArrayList<Object[]> arr) 
    {
        
        for(int j=0; j<arr.size(); j++) 
        {  
            for(int i=j+1; i<arr.size(); i++)
            {  
                if((arr.get(i)[1]).toString().compareToIgnoreCase(arr.get(j)[1].toString())<0)
                {  
                   Object[] words = arr.get(j); 
                   arr.set(j, arr.get(i));
                   arr.set(i, words);
                }  
            }  
            System.out.println(arr.get(j)[0] + " - " + arr.get(j)[1]);  
        }  
    }  



   public static void SelectionSort(ArrayList<Object[]> arr) 
    {
        
        for(int j=0; j<arr.size(); j++) 
        {  
            for(int i=j+1; i<arr.size(); i++)
            {  
                if((arr.get(i)[1]).toString().compareToIgnoreCase(arr.get(j)[1].toString())<0)
                {  
                   Object[] words = arr.get(j); 
                   arr.set(j, arr.get(i));
                   arr.set(i, words);
                }  
            }  
            System.out.println(arr.get(j)[0] + " - " + arr.get(j)[1]);  
        }  
    }  

   
   /*
   
   public static void SelectionSort ( int [ ] num )
{
 int i, j, first, temp;
 for ( i = num.length - 1; i > 0; i - - )
 {
 first = 0; //initialize to subscript of first element
 for(j = 1; j <= i; j ++) //locate smallest element between positions 1 and i.
 {
 if( num[ j ] < num[ first ] )
 first = j;
 }
 temp = num[ first ]; //swap smallest found with element in position i.
 num[ first ] = num[ i ];
 num[ i ] = temp;

 }
}
   
   */



}
